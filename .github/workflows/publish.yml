on:
  release:
    types:
      - published

name: Publish to npm

jobs:
  publish:
    name: Create release assets and publish
    if: 'false' # Disabled due to not being complete yet
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup node
        uses: actions/setup-node@2
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Install yarn if not already installed
        run: if command -v yarn &> /dev/null; then echo "yarn is already installed, not doing anything"; else npm i -g yarn; fi

      - name: Get yarn cache directory path
        id: yarn-cache-dir # Stolen from https://github.com/actions/cache/blob/main/examples.md#node---yarn
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn cache
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install deps
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --non-interactive install --frozen-lockfile

      - name: Remove unneeded files
        run: |
          rm -rf .github changelog_tmp CHANGELOG.md CODE_OF_CONDUCT.md README.md                     # Misc files
          rm .eslint{ignore,rc.json} .prettierrc .versionrc.json commitlint.config.js renovate.json  # Tool config files
          rm .gitignore .gitattributes                                                               # Git files

      - name: Lint
        run: yarn run lint

      - name: Test
        run: yarn run test

      - name: Build
        run: yarn run build

      - name: Publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
